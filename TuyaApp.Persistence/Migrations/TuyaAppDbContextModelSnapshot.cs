// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuyaApp.Persistence.Context;

#nullable disable

namespace TuyaApp.Persistence.Migrations
{
    [DbContext(typeof(TuyaAppDbContext))]
    partial class TuyaAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("TuyaApp.Domain.Entities.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PositionLeft")
                        .HasColumnType("REAL");

                    b.Property<double>("PositionTop")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultFunction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceTuyaId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfSwitch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuyaAccountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TuyaAccountId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.MenuProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuSave")
                        .HasColumnType("jsonb");

                    b.Property<string>("ProfilName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TuyaAccountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TuyaAccountId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.TuyaAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TuyaAccounts");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.Dashboard", b =>
                {
                    b.HasOne("TuyaApp.Domain.Entities.Device", "Device")
                        .WithOne("Dashboard")
                        .HasForeignKey("TuyaApp.Domain.Entities.Dashboard", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.Device", b =>
                {
                    b.HasOne("TuyaApp.Domain.Entities.TuyaAccount", "TuyaAccount")
                        .WithMany("Devices")
                        .HasForeignKey("TuyaAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyaAccount");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.MenuProfile", b =>
                {
                    b.HasOne("TuyaApp.Domain.Entities.TuyaAccount", "TuyaAccount")
                        .WithMany("Menus")
                        .HasForeignKey("TuyaAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyaAccount");
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.Device", b =>
                {
                    b.Navigation("Dashboard")
                        .IsRequired();
                });

            modelBuilder.Entity("TuyaApp.Domain.Entities.TuyaAccount", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
